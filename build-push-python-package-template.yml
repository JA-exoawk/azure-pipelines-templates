parameters:
  - name: feed
    type: string
    default: MyFeed
  - name: pythonVersion
    type: string
    default: '3.12'

stages:
  - stage: BuildAndPush
    jobs:
      - job: BuildJob
        pool:
          name: "MyLocalPool"
        # Set environment variables for the whole job so that Poetryâ€™s bin directory is available in all steps
        env:
          PATH: $HOME/.local/bin:$(PATH)
        steps:
          # Ensure the correct Python version is used
          - task: UsePythonVersion@0
            inputs:
              versionSpec: ${{ parameters.pythonVersion }}
            displayName: 'Use Python ${{ parameters.pythonVersion }}'
          
          # Install Poetry using the official installer script
          - script: |
              curl -sSL https://install.python-poetry.org | python3 -
              poetry --version
            displayName: 'Install Poetry'

          # Configure Poetry to use your Azure Artifacts repository and set credentials
          - script: |
              poetry config repositories.azure index-url=https://pkgs.dev.azure.com/exoawktest/5ce4f0b1-c4d9-4069-9782-60242c3d1b35/_packaging/${{ parameters.feed }}/pypi/simple/
              poetry config http-basic.azure $(AZURE_ARTIFACT_USERNAME) $(AZURE_ARTIFACT_PASSWORD)
            displayName: 'Configure Poetry Repository'

          # Build the package using Poetry (creates source and wheel distributions)
          - script: |
              poetry build
            displayName: 'Build Package'

          # Publish the package to Azure Artifacts using Poetry
          - script: |
              poetry publish -r azure --build
            displayName: 'Publish Package to Azure Artifacts'
            env:
              AZURE_ARTIFACT_USERNAME: $(AZURE_ARTIFACT_USERNAME)
              AZURE_ARTIFACT_PASSWORD: $(AZURE_ARTIFACT_PASSWORD)
